name: Ultimate-Mahjong-Connect-Front CICD 

on: 
  push:
    branches: [main, develop, feature/*]
  workflow_dispatch: 
jobs:
  build-and-push:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        dotnet-version: [ '9.0.x' ]

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Clean solution
        working-directory: ${{ github.workspace }}
        run: dotnet clean UltimateMahjongConnect.slnx --configuration Debug
          
      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: dotnet restore UltimateMahjongConnect.slnx
        
      - name: Build
        working-directory: ${{ github.workspace }}
        run: dotnet test UltimateMahjongConnect.slnx --framework net9.0
        
      - name: Test with dotnet
        working-directory: ${{ github.workspace }}
        run: dotnet test UltimateMahjongConnect.slnx --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
        
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.10.0 

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/ultimate-mahjong-connect-back-end-image:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 
        
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RASPBERRY_HOST }}
          username: ${{ secrets.RASPBERRY_USER }}
          password: ${{ secrets.RASPBERRY_PASSWORD }}
          port: 50022 
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            docker pull ghcr.io/${{ github.repository_owner }}/counter-image:latest
            docker stop mon-api || true
            docker rm mon-api || true
            docker run -d -p 8080:8080 --restart unless-stopped --name mon-api ghcr.io/${{ github.repository_owner }}/counter-image:latest

      - name: Install kubectl CLI
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: Set Kubeconfig file
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          
      - name: Fetch Kubernetes Cluster Details
        run: |
          kubectl version --short
          echo "----------------------------------------"
          kubectl get nodes
