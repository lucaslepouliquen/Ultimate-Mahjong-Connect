name: Ultimate-Mahjong-Connect CICD 

on: 
  push:
    branches: [main, develop]
  workflow_dispatch: 
env:
  DEPLOYMENT_NAME: ultimate-mahjong-connect
  K8S_NAMESPACE: ultimate-mahjong-connect
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
  FACEBOOK_APP_SECRET: ${{ secrets.FACEBOOK_APP_SECRET }}
  INSTAGRAM_CLIENT_ID: ${{ secrets.INSTAGRAM_CLIENT_ID }}
  INSTAGRAM_CLIENT_SECRET: ${{ secrets.INSTAGRAM_CLIENT_SECRET }}
jobs:
  build-and-push:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        dotnet-version: [ '9.0.x' ]

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Clean solution
        working-directory: ${{ github.workspace }}
        run: dotnet clean UltimateMahjongConnect.slnx --configuration Debug
          
      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: dotnet restore UltimateMahjongConnect.slnx
        
      - name: Build
        working-directory: ${{ github.workspace }}
        run: dotnet build UltimateMahjongConnect.slnx --framework net9.0
        
      - name: Test with dotnet
        working-directory: ${{ github.workspace }}
        run: dotnet test UltimateMahjongConnect.slnx --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
        
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.10.0 

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64 
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/ultimate-mahjong-connect-back-end-image:latest
          build-args: |
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            FACEBOOK_APP_ID=${{ secrets.FACEBOOK_APP_ID }}
            FACEBOOK_APP_SECRET=${{ secrets.FACEBOOK_APP_SECRET }}
            INSTAGRAM_CLIENT_ID=${{ secrets.INSTAGRAM_CLIENT_ID }}
            INSTAGRAM_CLIENT_SECRET=${{ secrets.INSTAGRAM_CLIENT_SECRET }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4 
        
      - name: Deploy to Raspberry Pi
        run: 
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker pull ghcr.io/${{ github.repository_owner }}/ultimate-mahjong-connect-back-end-image:latest
          
      - name: Fetch Kubernetes Cluster Details
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.DEPLOYMENT_NAME }}=ghcr.io/${{ github.repository_owner }}/ultimate-mahjong-connect-back-end-image:latest -n ${{ env.K8S_NAMESPACE }}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}
